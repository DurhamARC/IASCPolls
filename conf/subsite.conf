# Not required, already included in nginx.conf
#include mime.types;

map $http_x_forwarded_proto $real_scheme {
    default $scheme;
    https "https";
}

map $http_host $port {
    default $server_port;
    "~^[^\:]+:(?<p>\d+)$" $p;
}

upstream gunicorn {
    server 127.0.0.1:5000;
    keepalive 2;
}

proxy_cache_path /data/nginx/cache levels=1:2 keys_zone=django:10m inactive=24h max_size=1g use_temp_path=off;

server {
    listen 8080 default_server;
    listen [::]:8080;
    server_name _;

    root /app/frontend/;
    index index.html index.htm;

    # Don't change access log when running under Docker, it breaks the console logging
    #access_log  /var/log/nginx/host.access.log  main;

    keepalive_timeout 5;

    location = /favicon.ico {
        root /app/frontend/static/;
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        root /app/frontend/static/;
        allow all;
        log_not_found off;
        access_log off;
    }

    # Match other resources loaded from root /, e.g. /apple-touch-icon.png
    location ~* ^/[^/]+\.(?:ico|gif|jpe?g|png|webp|svg)$ {
        root /app/frontend/static/;
        expires max;
        add_header Vary Accept-Encoding;
        access_log off;
        log_not_found off;
    }

    # Set caching for static resources (MUST come after above, or will match files in root)
    location ~* \.(?:ico|css|js|gif|jpe?g|png|webp|svg|woff|ttf)$ {
        expires max;
        add_header Vary Accept-Encoding;
        access_log off;
        log_not_found off;
    }

    # Load static files direct from filesystem
    location /static/ {
        expires 24h;
        add_header Cache-Control "public";
        try_files $uri $uri/ /index.html;
    }

    # Proxy-pass ALL routes to gunicorn
    location / {
        resolver 127.0.0.11 valid=300s;

        # Cache the reverse proxy to avoid passing the majority of requests to python
        proxy_cache django;
        proxy_cache_valid 200 60m;

        # Enable caching for URLs with GET parameter arguments
        # http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_key
        proxy_cache_key $scheme$proxy_host$uri;

        # Use some more aggressive caching settings per
        # https://www.nginx.com/blog/nginx-caching-guide/
        proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
        proxy_cache_min_uses 3;
        proxy_cache_lock on;

        # http://www.szotten.com/david/nginx-caching-with-django.html
        # ignore "Vary: cookie" from django and instead use
        # cache_bypass for the sessionid cookie
        proxy_ignore_headers Vary;
        proxy_cache_bypass $cookie_sessionid;
        # add a custom header with cache status, for debugging
        add_header X-Cache-Status $upstream_cache_status;

        # Keep connections alive
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host       $host;

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $http_x_forwarded_port,$port;
        proxy_set_header X-Forwarded-Proto $real_scheme;
        proxy_set_header X-Forwarded-Prefix /;

        proxy_pass http://gunicorn;
        proxy_redirect off;

        # Use nginx error pages:
        # see http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_intercept_errors
        proxy_intercept_errors on;
    }

    # Custom 404 page
    #
    error_page  404              /404.html;
    location = /404.html {
        root   /usr/share/nginx/html/;
        internal;
    }

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html/;
        internal;
    }

    # Uncomment to test 500 errors
#     location /test50x {
#         fastcgi_pass unix:/does/not/exist;
#     }

    server_tokens off;
    client_max_body_size 250M;
}

