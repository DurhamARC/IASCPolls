# Build and Deploy Python Code App on Azure
# Manually triggered from build-azure.yml
# https://aka.ms/yaml

trigger:
- none

pr: none

appendCommitMessageToRunName: true

pool:
  name: Default
  demands:
  - Agent.Name -equals vmlsha1

resources:
- repo: self

variables:
  - group: arc_iasc

  - name: appName
    ${{ if eq( variables['Build.SourceBranchName'], 'release' ) }}:
      value: 'duuksawharciasc01'
    ${{ if ne( variables['Build.SourceBranchName'], 'release' ) }}:
      value: 'duuksawharciascdevel01'
    
  - name: azureSubscription
    value: 'svc-con-awh-01'
  - name: webAppResourceGroupName
    value: 'du-uks-awh-arc-iasc01'

  - name: containerRegistryName
    value: 'https://index.docker.io/v1'
  - name: dockerfile
    value: '$(Build.SourcesDirectory)/Dockerfile'
  - name: dockerRegistryServiceConnection
    value: 'DurhamARCDockerHub'
  - name: imageRepository
    value: 'durhamarc/iasc'

stages:
  - stage: Release
    displayName: Release
    jobs:
      - job: Release
        displayName: Release
        steps:
          - task: AzureAppServiceSettings@1
            displayName: Azure App Service Settings
            inputs:
              azureSubscription: $(azureSubscription)
              appName: $(appName)
              # To deploy the settings on a slot, provide slot name as below.
              # By default, the settings would be applied to the actual Web App (Production slot)
              # slotName: staging
              appSettings: |
                [{
                  "name": "WEBSITES_PORT",
                  "value": 8000,
                  "slotSetting": false
                },
                {
                  "name": "ALLOWED_HOSTS",
                  "value": "$(ALLOWED_HOSTS)",
                  "slotSetting": false
                },
                {
                  "name": "SITE_URL",
                  "value": "$(SITE_URL)",
                  "slotSetting": false
                },
                {
                  "name": "CSRF_TRUSTED_ORIGINS",
                  "value": "$(CSRF_TRUSTED_ORIGINS)",
                  "slotSetting": false
                },
                {
                  "name": "DB_HOST",
                  "value": "$(DB_HOST)",
                  "slotSetting": false
                },
                {
                  "name": "DB_PORT",
                  "value": "$(DB_PORT)",
                  "slotSetting": false
                },
                {
                  "name": "DB_NAME",
                  "value": "$(DB_NAME)",
                  "slotSetting": false
                },
                {
                  "name": "DB_PASS",
                  "value": "$(DB_PASS)",
                  "slotSetting": false
                },
                {
                  "name": "DB_USER",
                  "value": "$(DB_USER)",
                  "slotSetting": false
                },
                {
                  "name": "DB_SSL_ENABLED",
                  "value": "$(DB_SSL_ENABLED)",
                  "slotSetting": false
                }]

          # https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/reference/azure-rm-web-app-deployment-v4
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: '$(azureSubscription)'
              appType: 'webAppContainer'
              WebAppName: '$(appName)'
              deployToSlotOrASE: true
              ResourceGroupName: '$(webAppResourceGroupName)'
              SlotName: 'production'
              DockerNamespace: $(DOCKER_REGISTRY_SERVER_URL)
              DockerRepository: $(imageRepository)
              DockerImageTag: 'latest'

          - task: AzureAppServiceManage@0
            inputs:
              azureSubscription: $(azureSubscription)
              Action: 'Restart Azure App Service'
              WebAppName: $(appName)
