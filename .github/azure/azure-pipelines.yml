# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  name: Default
  demands:
  - Agent.Name -equals vmlsha1

resources:
- repo: self

variables:
  - name: azureSubscription
    value: 'svc-con-awh-01'
  - name: appName
    value: 'duuksawharciasc01'
  - name: webAppResourceGroupName
    value: 'du-uks-awh-arc-iasc01'
  - name: runtimeStack
    value: 'PYTHON|3.8'
  - name: allowedHosts
    value: 'iasc.awh.durham.ac.uk'

stages:
  - stage: Build
    displayName: Build and zip content
    jobs:
      - job: Build
        displayName: Build and Zip content
        steps:
          - checkout: self
          - script: |
              sudo apt-get -y install zip
              echo  '$(System.DefaultWorkingDirectory)'
            displayName: Run script

          # Install NodeJS
          - task: NodeTool@0
            inputs:
              versionSpec: '16.x'
            displayName: 'Install Node.js'

          - script: |
              npm install
            displayName: 'Install NPM packages'
            workingDirectory: react-app/

          - script: |
              npm run webpack
            displayName: 'Build static site with npm'
            workingDirectory: react-app/

          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
              includeRootFolder: false
              archiveType: "zip"
              archiveFile: "$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip"
              replaceExistingArchive: true
            displayName: "Archive Files"

          - publish: "$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip"
            artifact: $(appName)
            displayName: "Upload Artifact"

  - stage: Release
    displayName: Release
    jobs:
      - job: Release
        displayName: Release
        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: $(appName)
              targetPath: '$(System.DefaultWorkingDirectory)'

          # https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/reference/azure-rm-web-app-deployment-v4
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: '$(azureSubscription)'
              appType: 'webAppLinux'
              WebAppName: '$(appName)'
              deployToSlotOrASE: true
              ResourceGroupName: '$(webAppResourceGroupName)'
              SlotName: 'production'
              packageForLinux: '$(System.DefaultWorkingDirectory)/$(Build.BuildId).zip'
              RuntimeStack: '$(runtimeStack)'
              StartupCommand: >-
                python -m pip install -r requirements.txt &&
                python manage.py migrate &&
                gunicorn --bind=0.0.0.0:8000 iasc.wsgi
              AppSettings: >-
                -SCM_DO_BUILD_DURING_DEPLOYMENT "true"
                -ENABLE_ORYX_BUILD "true"
                -ALLOWED_HOSTS "$(allowedHosts)"
                -SITE_URL "https://$(allowedHosts)"
                -CSRF_TRUSTED_ORIGINS "https://$(allowedHosts)"
              ScriptType: 'Inline Script'
              InlineScript: |
                echo "Working directory is $(pwd)"
                export WORKDIR=$(pwd)
                echo "python3.8 is $(which python3.8)"
                echo "\$PYTHONPATH is $PYTHONPATH"
                echo "\$PATH is $PATH"
                echo "Creating virtual environment:"
                python3.8 -m venv venv
                chmod +x ./venv/bin/activate
                echo "Activating virtual environment:"
                . ./venv/bin/activate
                echo "python is $(which python)"
                echo "Install requirements..."
                python -m pip install -r requirements.txt
